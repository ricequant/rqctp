# -*- coding: utf-8 -*-
#
# Copyright 2019 Ricequant, Inc
#
# * Commercial Usage: please contact public@ricequant.com
# * Non-Commercial Usage:
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.

from ctypes import c_int, c_short, c_char, c_double

from .utils import Struct

{% for len in char_array_lengths %}
c_char_Array_{{ len }} = c_char * {{ len }}
{% endfor %}
{% for struct in structs %}


class {{ struct.py_class_name }}(Struct):
    _fields_ = [
    {% for member in struct.members %}
    {% if member.type.array_len is none %}
        ("{{ member.name }}", c_{{ member.type.base_type }}),
    {% else %}
        ("{{ member.name }}", c_{{ member.type.base_type }}_Array_{{member.type.array_len}}),
    {% endif %}
    {% endfor %}
    ]

    def __init__(self{% for member in struct.members %}, {{ member.name }}=None{% endfor %}):
        super().__init__()
        {% for member in struct.members %}
        if {{ member.name }}:
        {% if member.type.py_type == 'str' %}
            self.{{ member.name }} = {{ member.name }}.encode("GBK")
        {% else %}
            self.{{ member.name }} = {{ member.name }}
        {% endif %}
        {% endfor %}
{% endfor %}
