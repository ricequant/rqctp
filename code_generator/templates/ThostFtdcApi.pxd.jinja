# -*- coding: utf-8 -*-
#
# Copyright 2019 Ricequant, Inc
#
# * Commercial Usage: please contact public@ricequant.com
# * Non-Commercial Usage:
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.

from cpython cimport PyObject
from libc.string cimport const_char
from libcpp cimport bool as cbool

from .ThostFtdcUserApiStruct cimport *


cdef extern from "ThostFtdc{{ trader_md }}Api.h":
    cdef cppclass C{{ trader_md }}Api "CThostFtdc{{ trader_md }}Api":
        void Release() nogil
        void Init() nogil
        int Join() nogil
        void RegisterSpi(C{{ trader_md }}Spi *pSpi) nogil except +
        void SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType) nogil except +
        void SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType) nogil except +
        {% for method in methods %}
        {{ method.return_type }} {{ method.name }}(
            {%- for p in method.params -%}
            {{ p.type.base }} {% if p.type.pointer %}*{% endif %}{{ p.name }}{% if p.type.array %}[]{% endif %}{% if not loop.last %}, {% endif %}
            {%- endfor -%}
        ) nogil except +
        {% endfor %}


cdef extern from "ThostFtdc{{ trader_md }}Api.h" namespace "CThostFtdc{{ trader_md }}Api":
    {% if trader_md == "Trader" %}
    CTraderApi *CreateFtdcTraderApi(const_char *pszFlowPath) nogil except +
    {% else %}
    CMdApi *CreateFtdcMdApi(const_char *pszFlowPath, cbool bIsUsingUdp, cbool bIsMulticast) nogil except +
    {% endif %}
    const_char *GetApiVersion() nogil


cdef extern from "C{{ trader_md }}Spi.h":
    cdef cppclass C{{ trader_md }}Spi:
        C{{ trader_md }}Spi(PyObject *obj)
